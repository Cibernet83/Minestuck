// Date: 9/19/2013 11:00:58 AM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package com.mraof.minestuck.client.model;

import com.mraof.minestuck.entity.consort.ConsortEntity;
import net.minecraft.client.model.HierarchicalModel;
import net.minecraft.client.model.geom.ModelPart;
import net.minecraft.client.model.geom.PartPose;
import net.minecraft.client.model.geom.builders.CubeListBuilder;
import net.minecraft.client.model.geom.builders.LayerDefinition;
import net.minecraft.client.model.geom.builders.MeshDefinition;
import net.minecraft.client.model.geom.builders.PartDefinition;

public class IguanaModel<T extends ConsortEntity> extends HierarchicalModel<T>
{
	private final ModelPart root;
	private final ModelPart body;
	private final ModelPart leftLeg, rightLeg;
	private final ModelPart head;
	private final ModelPart upperJaw, lowerJaw;
	private final ModelPart upperTail, lowerTail;
	private final ModelPart shape1, shape2;
	
	public IguanaModel(ModelPart root)
	{
		this.root = root;
		body = root.getChild("body");
		leftLeg = root.getChild("left_leg");
		rightLeg = root.getChild("right_leg");
		head = root.getChild("head");
		upperJaw = root.getChild("upper_jaw");
		lowerJaw = root.getChild("lower_jaw");
		upperTail = root.getChild("upper_tail");
		lowerTail = root.getChild("lower_tail");
		shape1 = root.getChild("shape1");
		shape2 = root.getChild("shape2");
	}
	
	public static LayerDefinition createBodyLayer()
	{
		MeshDefinition mesh = new MeshDefinition();
		PartDefinition root = mesh.getRoot();
		
		root.addOrReplaceChild("body", CubeListBuilder.create().texOffs(12, 18)
				.addBox(-4, 0, -2, 6, 8, 6),
				PartPose.offset(1, 12, -1));
		root.addOrReplaceChild("left_leg", CubeListBuilder.create().texOffs(0, 25)
						.addBox(-2, 0, -2, 2, 4, 3),
				PartPose.offset(3, 20, 0));
		root.addOrReplaceChild("right_leg", CubeListBuilder.create().texOffs(0, 18)
						.addBox(-2, 0, -2, 2, 4, 3),
				PartPose.offset(-1, 20, 0));
		root.addOrReplaceChild("head", CubeListBuilder.create().texOffs(0, 0)
						.addBox(-4, -8, -4, 6, 4, 7),
				PartPose.offset(1, 16, 1));
		root.addOrReplaceChild("upper_jaw", CubeListBuilder.create().texOffs(0, 11)
						.addBox(0, 0, 0, 4, 1, 3),
				PartPose.offset(-2, 9, -6));
		root.addOrReplaceChild("lower_jaw", CubeListBuilder.create().texOffs(14, 11)
						.addBox(0, 0, 0, 4, 2, 3),
				PartPose.offset(-2, 10, -6));
		root.addOrReplaceChild("upper_tail", CubeListBuilder.create().texOffs(26, 0)
						.addBox(-2, 0, -2, 2, 4, 2),
				PartPose.offsetAndRotation(1, 18, 4, 0.2230717F, 0, 0));
		root.addOrReplaceChild("lower_tail", CubeListBuilder.create().texOffs(34, 0)
						.addBox(-2, 0, -2, 2, 2, 6),
				PartPose.offset(1, 22, 5));
		root.addOrReplaceChild("shape1", CubeListBuilder.create().texOffs(32, 16)
						.addBox(0, 0, 0, 1, 1, 1),
				PartPose.offsetAndRotation(-0.6F, 10.5F, 4, -0.9294653F, 0, 0));
		root.addOrReplaceChild("shape2", CubeListBuilder.create().texOffs(36, 16)
						.addBox(0, 0, 0, 1, 2, 2),
				PartPose.offsetAndRotation(-0.6F, 8, 4, -0.8179294F, 0, 0));
		return LayerDefinition.create(mesh, 64, 32);
	}
	
	@Override
	public ModelPart root()
	{
		return root;
	}
	
	@Override
	public void setupAnim(T entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {

	}
}